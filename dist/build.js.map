{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/index.js","webpack:///./src/js/main.js","webpack:///./src/styles/main.scss"],"names":["main","template","document","querySelector","addCard","id","name","types","urlImage","clone","cloneNode","codeCard","innerHTML","nameCard","typeCard","includes","typesPokemon","split","key","node","createElement","nodeWithContent","toUpperCase","appendChild","imageCard","setAttribute","classList","remove","containerCards","limit","urlList","urlBase","fetch","then","response","json","data","listPokemons","results","i","length","dataPokemon","console","log","namePokemon","imagePokemon","sprites","front_default","idPokemon","typePokemon","listTypeAux","push","type","classPokemon","join"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/index.js\");\n","//import \"@babel/polyfill\"\r\n\r\nimport { main } from './main'\r\nimport '../styles/main.scss'\r\n\r\nmain()\r\n\r\n","const template = document.querySelector('.card')\r\n\r\nfunction addCard(id, name, types, urlImage){\r\n    /*CONTROL GET DATA\r\n    console.log('ID ',id)\r\n    console.log('NAME ',id)\r\n    console.log('TYPES ',types)\r\n    console.log('IMAGE ',urlImage)\r\n    */\r\n\r\n\r\n    let clone = template.cloneNode(true)\r\n    //id\r\n    let codeCard = clone.querySelector('.code')\r\n    codeCard.innerHTML = \"ID/\"+id\r\n    //name\r\n    let nameCard = clone.querySelector('.name-pokemon')\r\n    nameCard.innerHTML = name\r\n    //type\r\n    let typeCard = clone.querySelector('.type')\r\n    \r\n    if(types.includes(',')){\r\n        let typesPokemon = types.split(',')\r\n        for (const key of typesPokemon) {\r\n            let node = document.createElement('span');\r\n            let nodeWithContent = node.innerHTML = key.toUpperCase()\r\n            typeCard.appendChild(node)\r\n        }\r\n    }else{\r\n        let node = document.createElement('span');\r\n        let nodeWithContent = node.innerHTML = types.toUpperCase()\r\n        typeCard.appendChild(node)\r\n    }\r\n    //image\r\n    let imageCard = clone.querySelector('img')\r\n    imageCard.setAttribute('src',urlImage)\r\n    //show card clone\r\n    clone.classList.remove('hidden')\r\n\r\n    let containerCards = document.querySelector('#cards')\r\n    containerCards.appendChild(clone)\r\n    return clone\r\n}\r\n\r\nexport function main(){\r\n    // code goes here\r\n    /*\r\n    let card = addCard()\r\n    addCard()\r\n    addCard()\r\n    */\r\n    let limit = 10\r\n\r\n    let urlList = 'https://pokeapi.co/api/v2/pokemon?limit='+limit\r\n    let urlBase = 'https://pokeapi.co/api/v2/pokemon/'\r\n\r\n    fetch(urlList)\r\n    .then(response => {\r\n        response.json()\r\n        .then(data => {\r\n            let listPokemons = data.results\r\n            for(let i = 0; i < listPokemons.length; i++){\r\n\r\n                urlBase = 'https://pokeapi.co/api/v2/pokemon/'+listPokemons[i].name+'/'\r\n\r\n                fetch(urlBase)\r\n                    .then(response => {\r\n                        response.json()\r\n                        .then(dataPokemon => {\r\n\r\n                            console.log(dataPokemon)\r\n                            let namePokemon = dataPokemon.name\r\n                            let imagePokemon = dataPokemon.sprites.front_default\r\n                            let idPokemon = dataPokemon.id\r\n                            let typePokemon = dataPokemon.types //.type['name'] //array\r\n\r\n                            let listTypeAux = []\r\n\r\n                            if(typePokemon.length > 1){\r\n                                for (const key of typePokemon) {\r\n                                    listTypeAux.push(key.type['name'])\r\n                                }\r\n                            }else{\r\n                                listTypeAux.push(typePokemon[0].type['name'])\r\n                            }\r\n\r\n                            let classPokemon = listTypeAux.join(',')\r\n                            console.log(classPokemon)\r\n\r\n                            addCard(idPokemon,namePokemon, classPokemon, imagePokemon)\r\n\r\n                        })\r\n                    })\r\n            }\r\n        })\r\n    })\r\n}","// extracted by mini-css-extract-plugin"],"sourceRoot":""}